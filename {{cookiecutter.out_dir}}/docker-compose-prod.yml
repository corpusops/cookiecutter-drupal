version: '3.7'
x-{{cookiecutter.app_type}}: &{{cookiecutter.app_type}}
  image: "${{'{'}}{{cookiecutter.app_type.upper()}}_IMAGE}:${{'{'}}{{cookiecutter.app_type.upper()}}_IMAGE_VERSION}"
{%-if not cookiecutter.remove_varnish%}
x-varnish: &varnish
  image: "${VARNISH_IMAGE}:${VARNISH_IMAGE_VERSION}"
{%-endif %}
x-images:
  bypass: &bypass
    command: 'sh -c "while true;do echo notstarted;sleep 65000;done"'
    entrypoint: 'sh -c "while true;do echo notstarted;sleep 65000;done"'
    restart: "no"
services:
  {%-if not cookiecutter.remove_varnish%}
  varnish:
    <<: [ *varnish ]
    restart: unless-stopped
  {%-endif%}
  nginx:
    restart: unless-stopped
    ports:
    - "${DRUPAL_HTTP_LISTEN:-0.0.0.0}:${DRUPAL_HTTP_PORT:-80}:80"
  {{cookiecutter.app_type}}:
    restart: unless-stopped
    <<: [ *{{cookiecutter.app_type}} ]
    ports:
    - "${DRUPAL_API_LISTEN:-127.0.0.1}:${DRUPAL_API_PORT:-9000}:9000"
  {% if not cookiecutter.remove_cron %}
  cron:
    restart: unless-stopped
  {%- endif%}
  backup:
    restart: unless-stopped
  mailcatcher:
    restart: unless-stopped
  {%if cookiecutter.with_redis%}
  redis:
    restart: unless-stopped
  {%endif%}
  db:
    restart: unless-stopped
  backup:
    restart: unless-stopped
{% if cookiecutter.db_mode == 'postgres' %}  setup-postgres:
    restart: unless-stopped
{% endif %}
